module RedisQueuedLocks
  module Logging
    def self.should_log?: (bool log_sampling_enabled, bool log_sample_this, Integer log_sampling_percent, untyped log_sampler) -> bool
    def self.valid_sampler?: (untyped sampler) -> bool
    def self.valid_interface?: (untyped logger) -> bool

    module VoidLogger
      def self.warn: (?untyped? progname) { (?) -> untyped } -> nil
      def self.unknown: (?untyped? progname) { (?) -> untyped } -> nil
      def self.log: (?untyped? progname) { (?) -> untyped } -> nil
      def self.info: (?untyped? progname) { (?) -> untyped } -> nil
      def self.error: (?untyped? progname) { (?) -> untyped } -> nil
      def self.fatal: (?untyped? progname) { (?) -> untyped } -> nil
      def self.debug: (?untyped? progname) { (?) -> untyped } -> nil
      def self.add: (*untyped) { (?) -> untyped } -> nil
      def self.<<: (untyped message) -> nil
    end
  end
end
