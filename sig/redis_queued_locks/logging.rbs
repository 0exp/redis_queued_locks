use RedisQueuedLocks as RQL

module RedisQueuedLocks
  module Logging
    interface _Sampler
      def sampling_happened?: (Integer sampling_percent) -> bool
    end

    type samplerObj = Object & _Sampler

    def self.should_log?: (bool log_sampling_enabled, bool log_sample_this, Integer log_sampling_percent, samplerObj log_sampler) -> bool
    def self.valid_sampler?: (samplerObj sampler) -> bool
    def self.valid_interface?: (Logger logger) -> bool
                             | (SemanticLogger::Logger logger) -> bool
                             | (RQL::loggerObj logger) -> bool
  end
end
