use RedisQueuedLocks as RQL

module RedisQueuedLocks
  class Swarm
    class Supervisor
      include RQL::Utilities

      @rql_client: RQL::Client
      @visor: Thread?
      @observable: Proc?

      attr_reader rql_client: RQL::Client
      attr_reader visor: Thread?
      attr_reader observable: Proc?

      def initialize: (RQL::Client rql_client) -> void

      type supervisorStatus = { running: bool, state: String, observable: String }
      def status: () -> supervisorStatus

      def observe!: () { (?) -> untyped } -> void
      def running?: () -> bool
      def stop!: () -> void
    end
  end
end
